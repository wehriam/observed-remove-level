{"version":3,"sources":["../../src/signed-map.js"],"names":["PQueue","ObservedRemoveMap","getVerifier","InvalidSignatureError","SignedObservedRemoveMap","constructor","db","entries","options","key","Error","verify","format","readyPromise","updateSize","promises","value","id","signature","push","setSigned","Promise","all","signedProcessQueue","concurrency","dump","signedInsertQueue","signedDeleteQueue","insertQueue","deleteQueue","get","namespace","error","notFound","JSON","stringify","queue","flush","maxAgeString","Date","now","maxAge","toString","padStart","clear","gt","lt","processSigned","signedQueue","skipFlush","add","_processSigned","put","process","pair","del","message","dequeue","deleteSigned","set","delete","shutdown","onIdle"],"mappings":"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","sourcesContent":["// @flow\n\nimport PQueue from 'p-queue';\nimport ObservedRemoveMap from './map';\nimport getVerifier from './verifier';\nimport { InvalidSignatureError } from './signed-error';\n\ntype Options = {\n  maxAge?:number,\n  bufferPublishing?:number,\n  key: any,\n  format?: string,\n  namespace?: string\n};\n\nexport default class SignedObservedRemoveMap<V> extends ObservedRemoveMap<V> {\n  constructor(db:Object, entries?: Iterable<[string, V, string, string]>, options?:Options) {\n    super(db, [], options);\n    if (!options || !options.key) {\n      throw new Error('Missing required options.key parameter');\n    }\n    this.verify = getVerifier(options.key, options.format);\n    if (!entries) {\n      return;\n    }\n    this.readyPromise = (async () => {\n      await this.updateSize();\n      const promises = [];\n      if (entries) {\n        for (const [key, value, id, signature] of entries) {\n          promises.push(this.setSigned(key, value, id, signature));\n        }\n      }\n      await Promise.all(promises);\n    })();\n    this.signedProcessQueue = new PQueue({ concurrency: 1 });\n  }\n\n  declare insertionSignatureMap: Map<string, string>;\n  declare deletionSignatureMap: Map<string, string>;\n  declare verify: (string, ...Array<any>) => boolean;\n  declare signedProcessQueue: PQueue;\n\n  async dump():Promise<[Array<*>, Array<*>]> {\n    const signedInsertQueue = [];\n    const signedDeleteQueue = [];\n    const [insertQueue, deleteQueue] = await super.dump();\n    for (const [key, [id, value]] of insertQueue) {\n      try {\n        const signature = await this.db.get(`${this.namespace}[${id}`);\n        signedInsertQueue.push([signature, id, key, value]);\n      } catch (error) {\n        if (error.notFound) {\n          throw new Error(`Missing signature for insertion key \"${JSON.stringify(key)}\" with id \"${id}\" and value \"${JSON.stringify(value)}\"`);\n        }\n        throw error;\n      }\n    }\n    for (const [id, key] of deleteQueue) {\n      try {\n        const signature = await this.db.get(`${this.namespace}]${id}`);\n        signedDeleteQueue.push([signature, id, key]);\n      } catch (error) {\n        if (error.notFound) {\n          throw new Error(`Missing signature for deletion key \"${JSON.stringify(key)}\" with id \"${id}\"`);\n        }\n        throw error;\n      }\n    }\n    const queue = [signedInsertQueue, signedDeleteQueue];\n    return queue;\n  }\n\n  async flush():Promise<void> {\n    const maxAgeString = (Date.now() - this.maxAge).toString(36).padStart(9, '0');\n    await this.db.clear({ gt: `${this.namespace}<`, lt: `${this.namespace}<${maxAgeString}` });\n    await this.db.clear({ gt: `${this.namespace}]`, lt: `${this.namespace}]${maxAgeString}` });\n  }\n\n  async processSigned(signedQueue:[Array<*>, Array<*>], skipFlush?: boolean = false):Promise<void> {\n    return this.signedProcessQueue.add(() => this._processSigned(signedQueue, skipFlush)); // eslint-disable-line  no-underscore-dangle\n  }\n\n  async _processSigned(signedQueue:[Array<*>, Array<*>], skipFlush?: boolean = false):Promise<void> { // eslint-disable-line  no-underscore-dangle\n    const [signedInsertQueue, signedDeleteQueue] = signedQueue;\n    const insertQueue = [];\n    const deleteQueue = [];\n    for (const [signature, id, key, value] of signedInsertQueue) {\n      if (!this.verify(signature, key, value, id)) {\n        throw new InvalidSignatureError(`Signature does not match for key \"${key}\" with value ${JSON.stringify(value)}`);\n      }\n      await this.db.put(`${this.namespace}[${id}`, signature);\n      insertQueue.push([key, [id, value]]);\n    }\n    for (const [signature, id, key] of signedDeleteQueue) {\n      if (!this.verify(signature, key, id)) {\n        throw new InvalidSignatureError(`Signature does not match for id ${JSON.stringify(id)}`);\n      }\n      await this.db.put(`${this.namespace}]${id}`, signature);\n      deleteQueue.push([id, key]);\n    }\n    const queue = [insertQueue, deleteQueue];\n    await super.process(queue, skipFlush);\n    for (const [signature, id, key] of signedInsertQueue) { // eslint-disable-line no-unused-vars\n      try {\n        const pair = await this.db.get(`${this.namespace}>${key}`);\n        if (pair[0] !== id) {\n          await this.db.del(`${this.namespace}]${id}`);\n        }\n      } catch (error) {\n        if (error.notFound) {\n          await this.db.del(`${this.namespace}]${id}`);\n        } else {\n          throw error;\n        }\n      }\n    }\n  }\n\n  async setSigned(key:string, value:V, id:string, signature:string) {\n    const message = [signature, id, key, value];\n    await this.processSigned([[message], []], true);\n    this.insertQueue.push(message);\n    await this.dequeue();\n    return this;\n  }\n\n  async deleteSigned(key:string, id:string, signature:string) {\n    const message = [signature, id, key];\n    await this.processSigned([[], [message]], true);\n    this.deleteQueue.push(message);\n    await this.dequeue();\n  }\n\n  clear() {\n    throw new Error('Unsupported method clear()');\n  }\n\n  set() {\n    throw new Error('Unsupported method set(), use setSigned()');\n  }\n\n  delete() {\n    throw new Error('Unsupported method delete(), use deleteSignedId()');\n  }\n\n  async shutdown() {\n    await this.signedProcessQueue.onIdle();\n    await super.shutdown();\n  }\n}\n\n"],"file":"signed-map.js"}